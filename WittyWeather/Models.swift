//
//  Models.swift
//  WittyWeather
//
//  Created by Felipe Lara on 07/09/2023.
//

import Foundation

// MARK: - Welcome
struct ForecastResponse: Codable {

    let cod: String //  Internal parameter
    let message: Int //  Internal parameter
    let cnt: Int // A number of timestamps returned in the API response
    let list: [Forecast]
    let city: City
}

// MARK: - City
struct City: Codable {

    let id: Int
    let name: String
    let coord: Coord
    let country: String
    let population: Int // City population
    let timezone: Int // Shift in seconds from UTC
    let sunrise: Int // Sunrise time, Unix, UTC
    let sunset: Int // Sunset time, Unix, UTC
}

// MARK: - Coord
struct Coord: Codable {

    let lat, lon: Double
}

// MARK: - List
struct Forecast: Codable {

    let dt: Int // Time of data forecasted, unix, UTC
    let main: MainClass
    let weather: [Weather]
    let clouds: Clouds
    let wind: Wind
    let visibility: Int // Average visibility, metres. The maximum value of the visibility is 10km
    let pop: Double // Probability of precipitation. The values of the parameter vary between 0 and 1, where 0 is equal to 0%, 1 is equal to 100%
    let sys: Sys //  Part of the day (n - night, d - day)
    let dtTxt: String //  Time of data forecasted, ISO, UTC
    let rain: Rain? // Rain volume for last x hours, mm. Please note that only mm as units of measurement are available for this parameter

    enum CodingKeys: String, CodingKey {

        case dt, main, weather, clouds, wind, visibility, pop, sys, rain
        case dtTxt = "dt_txt"
    }
}

// MARK: - Clouds
struct Clouds: Codable {

    let all: Int // Cloudiness, %
}

// MARK: - MainClass
struct MainClass: Codable {

    let temp: Double // Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
    let feelsLike: Double // This temperature parameter accounts for the human perception of weather. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
    let tempMin: Double // Minimum temperature at the moment of calculation. This is minimal forecasted temperature (within large megalopolises and urban areas), use this parameter optionally. Please find more info here. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
    let tempMax: Double // Maximum temperature at the moment of calculation. This is maximal forecasted temperature (within large megalopolises and urban areas), use this parameter optionally. Please find more info here. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit
    let pressure: Int // Atmospheric pressure on the sea level by default, hPa
    let seaLevel: Int // Atmospheric pressure on the sea level, hPa
    let grndLevel: Int // Atmospheric pressure on the ground level, hPa
    let humidity: Int // Humidity, %
    let tempKf: Double //  Internal parameter

    enum CodingKeys: String, CodingKey {

        case temp, pressure, humidity
        case feelsLike = "feels_like"
        case tempMin = "temp_min"
        case tempMax = "temp_max"
        case seaLevel = "sea_level"
        case grndLevel = "grnd_level"
        case tempKf = "temp_kf"
    }
}

// MARK: - Rain
struct Rain: Codable {

    let last3hours: Double // Rain volume for last 3 hours, mm. Please note that only mm as units of measurement are available for this parameter

    enum CodingKeys: String, CodingKey {

        case last3hours = "3h"
    }
}

// MARK: - Sys
struct Sys: Codable {
    let pod: PartOfDay
}

enum PartOfDay: String, Codable {

    case day = "d"
    case night = "n"
}

// MARK: - Weather
struct Weather: Codable {

    let id: Int // Weather condition id
    let main: String // Group of weather parameters (Rain, Snow, Clouds etc.)
    let description: String // Weather condition within the group.
    let icon: String // Weather icon id
}


// MARK: - Wind
struct Wind: Codable {

    let speed: Double // Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour
    let deg: Int // Wind direction, degrees (meteorological)
    let gust: Double // Wind gust. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour
}


// MARK: - CityGeoInfo
struct CityGeocoding: Codable, Equatable, Hashable {

    let name: String
    let localNames: [String: String]?
    let lat, lon: Double
    let country: String
    let state: String?

    enum CodingKeys: String, CodingKey {

        case name
        case localNames = "local_names"
        case lat, lon, country, state
    }
}

struct StringContants {
    
    static let countryEmojiFlags: [String: String] = [
        "AD": "ğŸ‡¦ğŸ‡©",
        "AE": "ğŸ‡¦ğŸ‡ª",
        "AF": "ğŸ‡¦ğŸ‡«",
        "AG": "ğŸ‡¦ğŸ‡¬",
        "AI": "ğŸ‡¦ğŸ‡®",
        "AL": "ğŸ‡¦ğŸ‡±",
        "AM": "ğŸ‡¦ğŸ‡²",
        "AO": "ğŸ‡¦ğŸ‡´",
        "AQ": "ğŸ‡¦ğŸ‡¶",
        "AR": "ğŸ‡¦ğŸ‡·",
        "AS": "ğŸ‡¦ğŸ‡¸",
        "AT": "ğŸ‡¦ğŸ‡¹",
        "AU": "ğŸ‡¦ğŸ‡º",
        "AW": "ğŸ‡¦ğŸ‡¼",
        "AX": "ğŸ‡¦ğŸ‡½",
        "AZ": "ğŸ‡¦ğŸ‡¿",
        "BA": "ğŸ‡§ğŸ‡¦",
        "BB": "ğŸ‡§ğŸ‡§",
        "BD": "ğŸ‡§ğŸ‡©",
        "BE": "ğŸ‡§ğŸ‡ª",
        "BF": "ğŸ‡§ğŸ‡«",
        "BG": "ğŸ‡§ğŸ‡¬",
        "BH": "ğŸ‡§ğŸ‡­",
        "BI": "ğŸ‡§ğŸ‡®",
        "BJ": "ğŸ‡§ğŸ‡¯",
        "BL": "ğŸ‡§ğŸ‡±",
        "BM": "ğŸ‡§ğŸ‡²",
        "BN": "ğŸ‡§ğŸ‡³",
        "BO": "ğŸ‡§ğŸ‡´",
        "BQ": "ğŸ‡§ğŸ‡¶",
        "BR": "ğŸ‡§ğŸ‡·",
        "BS": "ğŸ‡§ğŸ‡¸",
        "BT": "ğŸ‡§ğŸ‡¹",
        "BV": "ğŸ‡§ğŸ‡»",
        "BW": "ğŸ‡§ğŸ‡¼",
        "BY": "ğŸ‡§ğŸ‡¾",
        "BZ": "ğŸ‡§ğŸ‡¿",
        "CA": "ğŸ‡¨ğŸ‡¦",
        "CC": "ğŸ‡¨ğŸ‡¨",
        "CD": "ğŸ‡¨ğŸ‡©",
        "CF": "ğŸ‡¨ğŸ‡«",
        "CG": "ğŸ‡¨ğŸ‡¬",
        "CH": "ğŸ‡¨ğŸ‡­",
        "CI": "ğŸ‡¨ğŸ‡®",
        "CK": "ğŸ‡¨ğŸ‡°",
        "CL": "ğŸ‡¨ğŸ‡±",
        "CM": "ğŸ‡¨ğŸ‡²",
        "CN": "ğŸ‡¨ğŸ‡³",
        "CO": "ğŸ‡¨ğŸ‡´",
        "CR": "ğŸ‡¨ğŸ‡·",
        "CU": "ğŸ‡¨ğŸ‡º",
        "CV": "ğŸ‡¨ğŸ‡»",
        "CW": "ğŸ‡¨ğŸ‡¼",
        "CX": "ğŸ‡¨ğŸ‡½",
        "CY": "ğŸ‡¨ğŸ‡¾",
        "CZ": "ğŸ‡¨ğŸ‡¿",
        "DE": "ğŸ‡©ğŸ‡ª",
        "DJ": "ğŸ‡©ğŸ‡¯",
        "DK": "ğŸ‡©ğŸ‡°",
        "DM": "ğŸ‡©ğŸ‡²",
        "DO": "ğŸ‡©ğŸ‡´",
        "DZ": "ğŸ‡©ğŸ‡¿",
        "EC": "ğŸ‡ªğŸ‡¨",
        "EE": "ğŸ‡ªğŸ‡ª",
        "EG": "ğŸ‡ªğŸ‡¬",
        "EH": "ğŸ‡ªğŸ‡­",
        "ER": "ğŸ‡ªğŸ‡·",
        "ES": "ğŸ‡ªğŸ‡¸",
        "ET": "ğŸ‡ªğŸ‡¹",
        "FI": "ğŸ‡«ğŸ‡®",
        "FJ": "ğŸ‡«ğŸ‡¯",
        "FK": "ğŸ‡«ğŸ‡°",
        "FM": "ğŸ‡«ğŸ‡²",
        "FO": "ğŸ‡«ğŸ‡´",
        "FR": "ğŸ‡«ğŸ‡·",
        "GA": "ğŸ‡¬ğŸ‡¦",
        "GB": "ğŸ‡¬ğŸ‡§",
        "GD": "ğŸ‡¬ğŸ‡©",
        "GE": "ğŸ‡¬ğŸ‡ª",
        "GF": "ğŸ‡¬ğŸ‡«",
        "GG": "ğŸ‡¬ğŸ‡¬",
        "GH": "ğŸ‡¬ğŸ‡­",
        "GI": "ğŸ‡¬ğŸ‡®",
        "GL": "ğŸ‡¬ğŸ‡±",
        "GM": "ğŸ‡¬ğŸ‡²",
        "GN": "ğŸ‡¬ğŸ‡³",
        "GP": "ğŸ‡¬ğŸ‡µ",
        "GQ": "ğŸ‡¬ğŸ‡¶",
        "GR": "ğŸ‡¬ğŸ‡·",
        "GS": "ğŸ‡¬ğŸ‡¸",
        "GT": "ğŸ‡¬ğŸ‡¹",
        "GU": "ğŸ‡¬ğŸ‡º",
        "GW": "ğŸ‡¬ğŸ‡¼",
        "GY": "ğŸ‡¬ğŸ‡¾",
        "HK": "ğŸ‡­ğŸ‡°",
        "HM": "ğŸ‡­ğŸ‡²",
        "HN": "ğŸ‡­ğŸ‡³",
        "HR": "ğŸ‡­ğŸ‡·",
        "HT": "ğŸ‡­ğŸ‡¹",
        "HU": "ğŸ‡­ğŸ‡º",
        "ID": "ğŸ‡®ğŸ‡©",
        "IE": "ğŸ‡®ğŸ‡ª",
        "IL": "ğŸ‡®ğŸ‡±",
        "IM": "ğŸ‡®ğŸ‡²",
        "IN": "ğŸ‡®ğŸ‡³",
        "IO": "ğŸ‡®ğŸ‡´",
        "IQ": "ğŸ‡®ğŸ‡¶",
        "IR": "ğŸ‡®ğŸ‡·",
        "IS": "ğŸ‡®ğŸ‡¸",
        "IT": "ğŸ‡®ğŸ‡¹",
        "JE": "ğŸ‡¯ğŸ‡ª",
        "JM": "ğŸ‡¯ğŸ‡²",
        "JO": "ğŸ‡¯ğŸ‡´",
        "JP": "ğŸ‡¯ğŸ‡µ",
        "KE": "ğŸ‡°ğŸ‡ª",
        "KG": "ğŸ‡°ğŸ‡¬",
        "KH": "ğŸ‡°ğŸ‡­",
        "KI": "ğŸ‡°ğŸ‡®",
        "KM": "ğŸ‡°ğŸ‡²",
        "KN": "ğŸ‡°ğŸ‡³",
        "KP": "ğŸ‡°ğŸ‡µ",
        "KR": "ğŸ‡°ğŸ‡·",
        "KW": "ğŸ‡°ğŸ‡¼",
        "KY": "ğŸ‡°ğŸ‡¾",
        "KZ": "ğŸ‡°ğŸ‡¿",
        "LA": "ğŸ‡±ğŸ‡¦",
        "LB": "ğŸ‡±ğŸ‡§",
        "LC": "ğŸ‡±ğŸ‡¨",
        "LI": "ğŸ‡±ğŸ‡®",
        "LK": "ğŸ‡±ğŸ‡°",
        "LR": "ğŸ‡±ğŸ‡·",
        "LS": "ğŸ‡±ğŸ‡¸",
        "LT": "ğŸ‡±ğŸ‡¹",
        "LU": "ğŸ‡±ğŸ‡º",
        "LV": "ğŸ‡±ğŸ‡»",
        "LY": "ğŸ‡±ğŸ‡¾",
        "MA": "ğŸ‡²ğŸ‡¦",
        "MC": "ğŸ‡²ğŸ‡¨",
        "MD": "ğŸ‡²ğŸ‡©",
        "ME": "ğŸ‡²ğŸ‡ª",
        "MF": "ğŸ‡²ğŸ‡«",
        "MG": "ğŸ‡²ğŸ‡¬",
        "MH": "ğŸ‡²ğŸ‡­",
        "MK": "ğŸ‡²ğŸ‡°",
        "ML": "ğŸ‡²ğŸ‡±",
        "MM": "ğŸ‡²ğŸ‡²",
        "MN": "ğŸ‡²ğŸ‡³",
        "MO": "ğŸ‡²ğŸ‡´",
        "MP": "ğŸ‡²ğŸ‡µ",
        "MQ": "ğŸ‡²ğŸ‡¶",
        "MR": "ğŸ‡²ğŸ‡·",
        "MS": "ğŸ‡²ğŸ‡¸",
        "MT": "ğŸ‡²ğŸ‡¹",
        "MU": "ğŸ‡²ğŸ‡º",
        "MV": "ğŸ‡²ğŸ‡»",
        "MW": "ğŸ‡²ğŸ‡¼",
        "MX": "ğŸ‡²ğŸ‡½",
        "MY": "ğŸ‡²ğŸ‡¾",
        "MZ": "ğŸ‡²ğŸ‡¿",
        "NA": "ğŸ‡³ğŸ‡¦",
        "NC": "ğŸ‡³ğŸ‡¨",
        "NE": "ğŸ‡³ğŸ‡ª",
        "NF": "ğŸ‡³ğŸ‡«",
        "NG": "ğŸ‡³ğŸ‡¬",
        "NI": "ğŸ‡³ğŸ‡®",
        "NL": "ğŸ‡³ğŸ‡±",
        "NO": "ğŸ‡³ğŸ‡´",
        "NP": "ğŸ‡³ğŸ‡µ",
        "NR": "ğŸ‡³ğŸ‡·",
        "NU": "ğŸ‡³ğŸ‡º",
        "NZ": "ğŸ‡³ğŸ‡¿",
        "OM": "ğŸ‡´ğŸ‡²",
        "PA": "ğŸ‡µğŸ‡¦",
        "PE": "ğŸ‡µğŸ‡ª",
        "PF": "ğŸ‡µğŸ‡«",
        "PG": "ğŸ‡µğŸ‡¬",
        "PH": "ğŸ‡µğŸ‡­",
        "PK": "ğŸ‡µğŸ‡°",
        "PL": "ğŸ‡µğŸ‡±",
        "PM": "ğŸ‡µğŸ‡²",
        "PN": "ğŸ‡µğŸ‡³",
        "PR": "ğŸ‡µğŸ‡·",
        "PS": "ğŸ‡µğŸ‡¸",
        "PT": "ğŸ‡µğŸ‡¹",
        "PW": "ğŸ‡µğŸ‡¼",
        "PY": "ğŸ‡µğŸ‡¾",
        "QA": "ğŸ‡¶ğŸ‡¦",
        "RE": "ğŸ‡·ğŸ‡ª",
        "RO": "ğŸ‡·ğŸ‡´",
        "RS": "ğŸ‡·ğŸ‡¸",
        "RU": "ğŸ‡·ğŸ‡º",
        "RW": "ğŸ‡·ğŸ‡¼",
        "SA": "ğŸ‡¸ğŸ‡¦",
        "SB": "ğŸ‡¸ğŸ‡§",
        "SC": "ğŸ‡¸ğŸ‡¨",
        "SD": "ğŸ‡¸ğŸ‡©",
        "SE": "ğŸ‡¸ğŸ‡ª",
        "SG": "ğŸ‡¸ğŸ‡¬",
        "SH": "ğŸ‡¸ğŸ‡­",
        "SI": "ğŸ‡¸ğŸ‡®",
        "SJ": "ğŸ‡¸ğŸ‡¯",
        "SK": "ğŸ‡¸ğŸ‡°",
        "SL": "ğŸ‡¸ğŸ‡±",
        "SM": "ğŸ‡¸ğŸ‡²",
        "SN": "ğŸ‡¸ğŸ‡³",
        "SO": "ğŸ‡¸ğŸ‡´",
        "SR": "ğŸ‡¸ğŸ‡·",
        "SS": "ğŸ‡¸ğŸ‡¸",
        "ST": "ğŸ‡¸ğŸ‡¹",
        "SV": "ğŸ‡¸ğŸ‡»",
        "SX": "ğŸ‡¸ğŸ‡½",
        "SY": "ğŸ‡¸ğŸ‡¾",
        "SZ": "ğŸ‡¸ğŸ‡¿",
        "TC": "ğŸ‡¹ğŸ‡¨",
        "TD": "ğŸ‡¹ğŸ‡©",
        "TF": "ğŸ‡¹ğŸ‡«",
        "TG": "ğŸ‡¹ğŸ‡¬",
        "TH": "ğŸ‡¹ğŸ‡­",
        "TJ": "ğŸ‡¹ğŸ‡¯",
        "TK": "ğŸ‡¹ğŸ‡°",
        "TL": "ğŸ‡¹ğŸ‡±",
        "TM": "ğŸ‡¹ğŸ‡²",
        "TN": "ğŸ‡¹ğŸ‡³",
        "TO": "ğŸ‡¹ğŸ‡´",
        "TR": "ğŸ‡¹ğŸ‡·",
        "TT": "ğŸ‡¹ğŸ‡¹",
        "TV": "ğŸ‡¹ğŸ‡»",
        "TW": "ğŸ‡¹ğŸ‡¼",
        "TZ": "ğŸ‡¹ğŸ‡¿",
        "UA": "ğŸ‡ºğŸ‡¦",
        "UG": "ğŸ‡ºğŸ‡¬",
        "UM": "ğŸ‡ºğŸ‡²",
        "US": "ğŸ‡ºğŸ‡¸",
        "UY": "ğŸ‡ºğŸ‡¾",
        "UZ": "ğŸ‡ºğŸ‡¿",
        "VA": "ğŸ‡»ğŸ‡¦",
        "VC": "ğŸ‡»ğŸ‡¨",
        "VE": "ğŸ‡»ğŸ‡ª",
        "VG": "ğŸ‡»ğŸ‡¬",
        "VI": "ğŸ‡»ğŸ‡®",
        "VN": "ğŸ‡»ğŸ‡³",
        "VU": "ğŸ‡»ğŸ‡º",
        "WF": "ğŸ‡¼ğŸ‡«",
        "WS": "ğŸ‡¼ğŸ‡¸",
        "YE": "ğŸ‡¾ğŸ‡ª",
        "YT": "ğŸ‡¾ğŸ‡¹",
        "ZA": "ğŸ‡¿ğŸ‡¦",
        "ZM": "ğŸ‡¿ğŸ‡²",
        "ZW": "ğŸ‡¿ğŸ‡¼"
    ]
}
